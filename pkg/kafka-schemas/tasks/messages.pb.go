// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.18.1
// source: kafka-schemas/tasks/messages.proto

package tasks

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MessageType int32

const (
	MessageType_TaskAdded     MessageType = 0
	MessageType_TaskAssigned  MessageType = 1
	MessageType_TaskCompleted MessageType = 3
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "TaskAdded",
		1: "TaskAssigned",
		3: "TaskCompleted",
	}
	MessageType_value = map[string]int32{
		"TaskAdded":     0,
		"TaskAssigned":  1,
		"TaskCompleted": 3,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_kafka_schemas_tasks_messages_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_kafka_schemas_tasks_messages_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_kafka_schemas_tasks_messages_proto_rawDescGZIP(), []int{0}
}

type Base struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string                 `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	Sender  string                 `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	Type    MessageType            `protobuf:"varint,3,opt,name=type,proto3,enum=tasks.MessageType" json:"type,omitempty"`
	Sended  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=sended,proto3" json:"sended,omitempty"`
	Data    []byte                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Base) Reset() {
	*x = Base{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Base) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Base) ProtoMessage() {}

func (x *Base) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Base.ProtoReflect.Descriptor instead.
func (*Base) Descriptor() ([]byte, []int) {
	return file_kafka_schemas_tasks_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Base) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Base) GetSender() string {
	if x != nil {
		return x.Sender
	}
	return ""
}

func (x *Base) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_TaskAdded
}

func (x *Base) GetSended() *timestamppb.Timestamp {
	if x != nil {
		return x.Sended
	}
	return nil
}

func (x *Base) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type TaskAddedV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPublicId    string `protobuf:"bytes,1,opt,name=task_public_id,json=taskPublicId,proto3" json:"task_public_id,omitempty"`
	AssignePublicId string `protobuf:"bytes,2,opt,name=assigne_public_id,json=assignePublicId,proto3" json:"assigne_public_id,omitempty"`
	Title           string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Description     string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskAddedV1) Reset() {
	*x = TaskAddedV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAddedV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAddedV1) ProtoMessage() {}

func (x *TaskAddedV1) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAddedV1.ProtoReflect.Descriptor instead.
func (*TaskAddedV1) Descriptor() ([]byte, []int) {
	return file_kafka_schemas_tasks_messages_proto_rawDescGZIP(), []int{1}
}

func (x *TaskAddedV1) GetTaskPublicId() string {
	if x != nil {
		return x.TaskPublicId
	}
	return ""
}

func (x *TaskAddedV1) GetAssignePublicId() string {
	if x != nil {
		return x.AssignePublicId
	}
	return ""
}

func (x *TaskAddedV1) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TaskAddedV1) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskAddedV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPublicId    string `protobuf:"bytes,1,opt,name=task_public_id,json=taskPublicId,proto3" json:"task_public_id,omitempty"`
	AssignePublicId string `protobuf:"bytes,2,opt,name=assigne_public_id,json=assignePublicId,proto3" json:"assigne_public_id,omitempty"`
	Title           string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	JiraId          string `protobuf:"bytes,4,opt,name=jira_id,json=jiraId,proto3" json:"jira_id,omitempty"`
	Description     string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *TaskAddedV2) Reset() {
	*x = TaskAddedV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAddedV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAddedV2) ProtoMessage() {}

func (x *TaskAddedV2) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAddedV2.ProtoReflect.Descriptor instead.
func (*TaskAddedV2) Descriptor() ([]byte, []int) {
	return file_kafka_schemas_tasks_messages_proto_rawDescGZIP(), []int{2}
}

func (x *TaskAddedV2) GetTaskPublicId() string {
	if x != nil {
		return x.TaskPublicId
	}
	return ""
}

func (x *TaskAddedV2) GetAssignePublicId() string {
	if x != nil {
		return x.AssignePublicId
	}
	return ""
}

func (x *TaskAddedV2) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TaskAddedV2) GetJiraId() string {
	if x != nil {
		return x.JiraId
	}
	return ""
}

func (x *TaskAddedV2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type TaskAssignedV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPublicId    string `protobuf:"bytes,1,opt,name=task_public_id,json=taskPublicId,proto3" json:"task_public_id,omitempty"`
	AssignePublicId string `protobuf:"bytes,2,opt,name=assigne_public_id,json=assignePublicId,proto3" json:"assigne_public_id,omitempty"`
}

func (x *TaskAssignedV1) Reset() {
	*x = TaskAssignedV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskAssignedV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAssignedV1) ProtoMessage() {}

func (x *TaskAssignedV1) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAssignedV1.ProtoReflect.Descriptor instead.
func (*TaskAssignedV1) Descriptor() ([]byte, []int) {
	return file_kafka_schemas_tasks_messages_proto_rawDescGZIP(), []int{3}
}

func (x *TaskAssignedV1) GetTaskPublicId() string {
	if x != nil {
		return x.TaskPublicId
	}
	return ""
}

func (x *TaskAssignedV1) GetAssignePublicId() string {
	if x != nil {
		return x.AssignePublicId
	}
	return ""
}

type TaskCompletedV1 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskPublicId    string `protobuf:"bytes,1,opt,name=task_public_id,json=taskPublicId,proto3" json:"task_public_id,omitempty"`
	AssignePublicId string `protobuf:"bytes,2,opt,name=assigne_public_id,json=assignePublicId,proto3" json:"assigne_public_id,omitempty"`
}

func (x *TaskCompletedV1) Reset() {
	*x = TaskCompletedV1{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskCompletedV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskCompletedV1) ProtoMessage() {}

func (x *TaskCompletedV1) ProtoReflect() protoreflect.Message {
	mi := &file_kafka_schemas_tasks_messages_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskCompletedV1.ProtoReflect.Descriptor instead.
func (*TaskCompletedV1) Descriptor() ([]byte, []int) {
	return file_kafka_schemas_tasks_messages_proto_rawDescGZIP(), []int{4}
}

func (x *TaskCompletedV1) GetTaskPublicId() string {
	if x != nil {
		return x.TaskPublicId
	}
	return ""
}

func (x *TaskCompletedV1) GetAssignePublicId() string {
	if x != nil {
		return x.AssignePublicId
	}
	return ""
}

var File_kafka_schemas_tasks_messages_proto protoreflect.FileDescriptor

var file_kafka_schemas_tasks_messages_proto_rawDesc = []byte{
	0x0a, 0x22, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa8, 0x01, 0x0a,
	0x04, 0x42, 0x61, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x32, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x73, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b,
	0x41, 0x64, 0x64, 0x65, 0x64, 0x56, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xb0, 0x01, 0x0a, 0x0b, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x56,
	0x32, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6a, 0x69, 0x72,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6a, 0x69, 0x72, 0x61,
	0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x62, 0x0a, 0x0e, 0x54, 0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x56, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x74, 0x61, 0x73, 0x6b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x22, 0x63, 0x0a, 0x0f, 0x54, 0x61, 0x73, 0x6b,
	0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x56, 0x31, 0x12, 0x24, 0x0a, 0x0e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x5f, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x73,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x64, 0x2a, 0x41, 0x0a,
	0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d, 0x0a, 0x09,
	0x54, 0x61, 0x73, 0x6b, 0x41, 0x64, 0x64, 0x65, 0x64, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x54,
	0x61, 0x73, 0x6b, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x54, 0x61, 0x73, 0x6b, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x10, 0x03,
	0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x4b,
	0x6f, 0x6c, 0x65, 0x4d, 0x61, 0x78, 0x2f, 0x61, 0x73, 0x79, 0x6e, 0x63, 0x2d, 0x61, 0x72, 0x63,
	0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x2d, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x73, 0x2f,
	0x74, 0x61, 0x73, 0x6b, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_kafka_schemas_tasks_messages_proto_rawDescOnce sync.Once
	file_kafka_schemas_tasks_messages_proto_rawDescData = file_kafka_schemas_tasks_messages_proto_rawDesc
)

func file_kafka_schemas_tasks_messages_proto_rawDescGZIP() []byte {
	file_kafka_schemas_tasks_messages_proto_rawDescOnce.Do(func() {
		file_kafka_schemas_tasks_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_kafka_schemas_tasks_messages_proto_rawDescData)
	})
	return file_kafka_schemas_tasks_messages_proto_rawDescData
}

var file_kafka_schemas_tasks_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_kafka_schemas_tasks_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_kafka_schemas_tasks_messages_proto_goTypes = []interface{}{
	(MessageType)(0),              // 0: tasks.MessageType
	(*Base)(nil),                  // 1: tasks.Base
	(*TaskAddedV1)(nil),           // 2: tasks.TaskAddedV1
	(*TaskAddedV2)(nil),           // 3: tasks.TaskAddedV2
	(*TaskAssignedV1)(nil),        // 4: tasks.TaskAssignedV1
	(*TaskCompletedV1)(nil),       // 5: tasks.TaskCompletedV1
	(*timestamppb.Timestamp)(nil), // 6: google.protobuf.Timestamp
}
var file_kafka_schemas_tasks_messages_proto_depIdxs = []int32{
	0, // 0: tasks.Base.type:type_name -> tasks.MessageType
	6, // 1: tasks.Base.sended:type_name -> google.protobuf.Timestamp
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_kafka_schemas_tasks_messages_proto_init() }
func file_kafka_schemas_tasks_messages_proto_init() {
	if File_kafka_schemas_tasks_messages_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kafka_schemas_tasks_messages_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Base); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_schemas_tasks_messages_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskAddedV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_schemas_tasks_messages_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskAddedV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_schemas_tasks_messages_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskAssignedV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kafka_schemas_tasks_messages_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskCompletedV1); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kafka_schemas_tasks_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kafka_schemas_tasks_messages_proto_goTypes,
		DependencyIndexes: file_kafka_schemas_tasks_messages_proto_depIdxs,
		EnumInfos:         file_kafka_schemas_tasks_messages_proto_enumTypes,
		MessageInfos:      file_kafka_schemas_tasks_messages_proto_msgTypes,
	}.Build()
	File_kafka_schemas_tasks_messages_proto = out.File
	file_kafka_schemas_tasks_messages_proto_rawDesc = nil
	file_kafka_schemas_tasks_messages_proto_goTypes = nil
	file_kafka_schemas_tasks_messages_proto_depIdxs = nil
}
